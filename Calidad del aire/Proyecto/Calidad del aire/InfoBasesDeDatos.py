import numpy as np
import pandas as pd
import regex as rg
import matplotlib.pyplot as plt
import glob
import os

path=r'Calidad del aire\Proyecto\Datos'
all_files = glob.glob(os.path.join(path + "/*.csv"))

data = []

for filename in all_files:
    df = pd.read_csv(filename, index_col=None, header=0)
    data.append(df)

frame = pd.concat(data, axis=0, ignore_index=True)
frame[['Fecha', 'Hora']] = frame['Fecha_Hora'].str.split(' ', n=1, expand=True)
frame.insert(0, 'Fecha', frame.pop('Fecha'))
frame.insert(1, 'Hora', frame.pop('Hora'))
frame.pop('Fecha_Hora')
frame.set_index('Fecha', inplace=True)
frame.index = pd.to_datetime(frame.index, format='%Y-%m-%d')
drop=['calidad_pm1', 'pm1', 'calidad_pm10', 'pm10', 'calidad_pm25', 'calidad_no',
      'calidad_no2', 'calidad_nox','calidad_ozono','calidad_co', 'calidad_so2', 'pst', 'calidad_pst',
      'dviento_ssr', 'calidad_dviento_ssr', 'haire10_ssr', 'calidad_haire10_ssr', 'p_ssr', 'calidad_p_ssr',
      'pliquida_ssr', 'calidad_pliquida_ssr', 'rglobal_ssr', 'calidad_rglobal_ssr', 'taire10_ssr', 'calidad_taire10_ssr', 'vviento_ssr', 'calidad_vviento_ssr']
frame2=frame.drop(columns=drop, axis=1)


# print(frame.index)
# print(frame.head(6))
# print(frame.tail(6))
# print(frame['pm25'])

frame3=frame2[(frame2['pm25']>0) & (frame2['pm25']<100)]

# slize = pd.DataFrame(frame2.loc["2024-10-12",:]) # Secciona una parte del dataframe
# print(slize) # Muestra un fragmento del dataframe donde habría una inconsistencia normalmente
medias = frame3.groupby([frame3.index.year,
                     frame3.index.month,
                     frame3.index.day])['pm25'].mean()
medias.index.names = ["Año", "Mes", "Día"]
print(frame3.head(35))
# print(medias.head(35)) # Muestra las primeras 35 del dataframe de promedios

# colors = ['#89FAB4', '#FAE4A0', '#FA837D', '#B049E3', '#E3BA5F', '#E35E54', '#6591EA', '#EB83C6', '#EB1551', '#1802F4']
# styles = ['', '', '-+', '-o', '', '', '', '', '', '']

# ax = df.plot(x='Year', y=df.columns[2:], style=styles, color=colors, figsize=(16, 9))  # plot the dataframe and set Time as x
# fig = ax.get_figure()  # extract the figure object
# ax.set_xticks(df.Year)  # set the xticks
# ax.legend(bbox_to_anchor=(1, 1.01), loc='upper left') # move the legend
# fig.tight_layout(pad=3)
# fig.suptitle('Power Generated by Renewable Energy sources (TWh)', fontsize=22, y=1.02, color='#A2BDF2')